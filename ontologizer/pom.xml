<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>ontologizer</artifactId>

	<parent>
		<groupId>ontologizer</groupId>
		<artifactId>ontologizer.parent</artifactId>
		<version>0.0.3-SNAPSHOT</version>
		<relativePath>../ontologizer.parent</relativePath>
	</parent>

	<build>
		<sourceDirectory>src</sourceDirectory>
		<resources>
			<resource>
				<directory>src</directory>
				<includes>
					<include>**/*.html</include>
					<include>**/*.png</include>
				</includes>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.10</version>

				<executions>
					<execution>
						<phase>generate-sources</phase>
						<id>add-sources</id>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.build.directory}/generated-sources</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<configuration>
							<target>
								<!-- Tell ant to use an external java compiler -->
								<property name="build.compiler" value="extJavac" />
								<ant antfile="build.xml" target="version"></ant>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.19.1</version>
				<configuration>
					<skipTests>true</skipTests>
				</configuration>
			</plugin>

			<!-- Deploy the target jar manually. This works as long as there are no real dependencies -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.2</version>
				<executions>
					<execution>
						<id>deploy-ontologizer-jar</id>
						<phase>deploy</phase>
						<goals>
							<goal>deploy-file</goal>
						</goals>
						<configuration>
							<url>file://${project.build.directory}/staging-mvn-repo</url>
							<file>${project.build.directory}/${project.build.finalName}.jar</file>
							<javadoc>${project.build.directory}/${project.build.finalName}-javadoc.jar</javadoc>
							<sources>${project.build.directory}/${project.build.finalName}-sources.jar</sources>
							<!-- Different to our groupId -->
							<groupId>de.ontologizer</groupId>
							<artifactId>${project.artifactId}</artifactId>
							<version>${project.version}</version>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Clean the unnecessary ontologizer folder. No idea why it is populated by deploy-file in the first place -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>clean-false-ontologizer</id>
						<phase>deploy</phase>
						<goals>
							<goal>clean</goal>
						</goals>
						<configuration>
							<excludeDefaultDirectories>true</excludeDefaultDirectories>
							<filesets>
								<fileset>
									<directory>
										${project.build.directory}/staging-mvn-repo/ontologizer
									</directory>
								</fileset>
							</filesets>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Build sources jar -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.0.1</version>
				<executions>
					<execution>
						<id>generate-sources-jar</id>
						<goals>
							<goal>jar</goal>
						</goals>
						<phase>package</phase>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<additionalparam>-Xdoclint:none</additionalparam>
				</configuration>
				<version>2.10.3</version>
				<executions>
					<execution>
						<id>generate-javadoc-jar</id>
						<goals>
							<goal>jar</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<excludePackageNames>att.*,java_cup.*</excludePackageNames>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>jdeb</artifactId>
				<groupId>org.vafer</groupId>
				<version>1.5</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>jdeb</goal>
						</goals>
						<configuration>
							<controlDir>${project.basedir}/deb</controlDir>
							<verbose>true</verbose>
							<snapshotExpand>true</snapshotExpand>
							<dataSet>
								<data>
									<src>${project.build.directory}/${project.build.finalName}.jar</src>
									<type>file</type>
									<mapper>
										<type>perm</type>
										<prefix>/usr/share/ontologizer/lib</prefix>
									</mapper>
								</data>
								<data>
									<linkTarget>/usr/share/ontologizer/lib/${project.build.finalName}.jar</linkTarget>
									<linkName>/usr/share/ontologizer/lib/${project.artifactId}.jar</linkName>
									<type>link</type>
								</data>
							</dataSet>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>

		<pluginManagement>
			<plugins>
				<!-- Disable standard deploy phase -->
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<configuration>
						<skip>true</skip>
					</configuration>
				</plugin>

				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-antrun-plugin
										</artifactId>
										<versionRange>
											[1.7,)
										</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>
